--altsyncram ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_POWER_UP_CONDITIONS="AUTO" ACF_DISABLE_MLAB_RAM_USE="FALSE" ACF_IMPLEMENT_MLAB_IN_16_BIT_DEEP_MODE="FALSE" ADDRESS_ACLR_A="NONE" ADDRESS_ACLR_B="NONE" ADDRESS_REG_B="CLOCK0" BYTE_SIZE=0 BYTEENA_REG_B="CLOCK0" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" CLOCK_DUTY_CYCLE_DEPENDENCE="AUTO" CLOCK_ENABLE_CORE_A="USE_INPUT_CLKEN" CLOCK_ENABLE_CORE_B="USE_INPUT_CLKEN" CLOCK_ENABLE_INPUT_A="NORMAL" CLOCK_ENABLE_INPUT_B="NORMAL" CLOCK_ENABLE_OUTPUT_A="NORMAL" CLOCK_ENABLE_OUTPUT_B="NORMAL" CYCLONEII_M4K_COMPATIBILITY="ON" DEVICE_FAMILY="Cyclone V" ECC_PIPELINE_STAGE_ENABLED="FALSE" ENABLE_ECC="FALSE" ENABLE_RUNTIME_MOD="NO" IMPLEMENT_IN_LES="OFF" INDATA_REG_B="CLOCK0" INIT_FILE_LAYOUT="PORT_A" LOW_POWER_MODE="AUTO" MAXIMUM_DEPTH=0 NUMWORDS_A=3 NUMWORDS_B=3 OPERATION_MODE="DUAL_PORT" OUTDATA_ACLR_A="NONE" OUTDATA_ACLR_B="CLEAR1" OUTDATA_REG_A="UNREGISTERED" OUTDATA_REG_B="CLOCK1" POWER_UP_UNINITIALIZED="TRUE" RAM_BLOCK_TYPE="MLAB" RDCONTROL_REG_B="CLOCK0" RDEN_POWER_OPTIMIZATION="ON" READ_DURING_WRITE_MODE_MIXED_PORTS="DONT_CARE" read_during_write_mode_port_a="NEW_DATA_NO_NBE_READ" read_during_write_mode_port_b="NEW_DATA_NO_NBE_READ" WIDTH_A=16 WIDTH_B=16 WIDTH_BYTEENA_A=1 WIDTH_BYTEENA_B=1 WIDTH_ECCSTATUS=2 WIDTHAD_A=2 WIDTHAD_B=2 WRCONTROL_WRADDRESS_REG_B="CLOCK0" aclr1 address_a address_b clock0 clock1 clocken1 data_a q_b wren_a CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 16.0 cbx_altera_syncram_nd_impl 2016:04:20:18:35:29:SJ cbx_altsyncram 2016:04:20:18:35:29:SJ cbx_cycloneii 2016:04:20:18:35:29:SJ cbx_lpm_add_sub 2016:04:20:18:35:29:SJ cbx_lpm_compare 2016:04:20:18:35:29:SJ cbx_lpm_decode 2016:04:20:18:35:29:SJ cbx_lpm_mux 2016:04:20:18:35:29:SJ cbx_mgl 2016:04:20:19:36:45:SJ cbx_nadder 2016:04:20:18:35:29:SJ cbx_stratix 2016:04:20:18:35:29:SJ cbx_stratixii 2016:04:20:18:35:29:SJ cbx_stratixiii 2016:04:20:18:35:29:SJ cbx_stratixv 2016:04:20:18:35:29:SJ cbx_util_mgl 2016:04:20:18:35:29:SJ  VERSION_END


-- Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.


FUNCTION cyclonev_mlab_cell (clk0, clk1, clr, ena0, ena1, ena2, portaaddr[address_width-1..0], portabyteenamasks[byte_enable_mask_width-1..0], portadatain[data_width-1..0], portbaddr[address_width-1..0])
WITH ( address_width = 1, byte_enable_mask_width = 2, data_width = 1, first_address, first_bit_number, init_file, last_address, logical_ram_depth, logical_ram_name, logical_ram_width, mem_init0, mixed_port_feed_through_mode, port_b_data_out_clear, port_b_data_out_clock)
RETURNS ( portbdataout[data_width-1..0]);

--synthesis_resources = MLAB 1 reg 18 
OPTIONS ALTERA_INTERNAL_OPTION = "OPTIMIZE_POWER_DURING_SYNTHESIS=NORMAL_COMPILATION;{-to rdaddr_reg} PRESERVE_REGISTER=ON";

SUBDESIGN altsyncram_omb4
( 
	aclr1	:	input;
	address_a[1..0]	:	input;
	address_b[1..0]	:	input;
	clock0	:	input;
	clock1	:	input;
	clocken1	:	input;
	data_a[15..0]	:	input;
	q_b[15..0]	:	output;
	wren_a	:	input;
) 
VARIABLE 
	dataout_reg[15..0] : dffe;
	rdaddr_reg[1..0] : dffe;
	lutrama0 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 0,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama1 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 1,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama2 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 2,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama3 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 3,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama4 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 4,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama5 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 5,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama6 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 6,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama7 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 7,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama8 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 8,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama9 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 9,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama10 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 10,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama11 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 11,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama12 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 12,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama13 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 13,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama14 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 14,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	lutrama15 : cyclonev_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 15,
			last_address = 2,
			logical_ram_depth = 3,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 16,
			mixed_port_feed_through_mode = "dont care"
		);
	datain_wire[15..0]	: WIRE;
	dataout_wire[15..0]	: WIRE;
	rdaddr_wire[1..0]	: WIRE;
	wr_en	: WIRE;
	wraddr_wire[1..0]	: WIRE;

BEGIN 
	dataout_reg[].clk = clock1;
	dataout_reg[].clrn = (! aclr1);
	dataout_reg[].d = dataout_wire[];
	dataout_reg[].ena = clocken1;
	rdaddr_reg[].clk = clock0;
	rdaddr_reg[].d = address_b[];
	lutrama[15..0].clk0 = clock0;
	lutrama[15..0].ena0 = wr_en;
	lutrama[15..0].portaaddr[1..0] = wraddr_wire[1..0];
	lutrama[0].portadatain[0..0] = datain_wire[0..0];
	lutrama[1].portadatain[0..0] = datain_wire[1..1];
	lutrama[2].portadatain[0..0] = datain_wire[2..2];
	lutrama[3].portadatain[0..0] = datain_wire[3..3];
	lutrama[4].portadatain[0..0] = datain_wire[4..4];
	lutrama[5].portadatain[0..0] = datain_wire[5..5];
	lutrama[6].portadatain[0..0] = datain_wire[6..6];
	lutrama[7].portadatain[0..0] = datain_wire[7..7];
	lutrama[8].portadatain[0..0] = datain_wire[8..8];
	lutrama[9].portadatain[0..0] = datain_wire[9..9];
	lutrama[10].portadatain[0..0] = datain_wire[10..10];
	lutrama[11].portadatain[0..0] = datain_wire[11..11];
	lutrama[12].portadatain[0..0] = datain_wire[12..12];
	lutrama[13].portadatain[0..0] = datain_wire[13..13];
	lutrama[14].portadatain[0..0] = datain_wire[14..14];
	lutrama[15].portadatain[0..0] = datain_wire[15..15];
	lutrama[15..0].portbaddr[1..0] = rdaddr_wire[1..0];
	datain_wire[] = data_a[];
	dataout_wire[] = lutrama[15..0].portbdataout[];
	q_b[] = dataout_reg[].q;
	rdaddr_wire[] = rdaddr_reg[].q;
	wr_en = wren_a;
	wraddr_wire[] = address_a[];
END;
--VALID FILE
